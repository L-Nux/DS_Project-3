# -*- coding: utf-8 -*-
"""Delay_Probability.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1M_0Fbgzbi3E3KOHBw9MuYMim9yG2K8v5
"""

import pandas as pd #data processing

file='final+.csv' #load the current dataset 
prob = pd.read_csv(file)
print(prob.describe()) #statistics

pr=prob.copy() #copy of dataset to work with a new feature

pr['final'] = pr.loc[:, 'finalsolutionusedlabels'] #create a duplicate of a column for shrinking the labels to claculate the probabilities

"""The transitional newly created column will be dropped afterwards, saving the previous 'finalsolutionlabels'column with 33 labels"""

#replace the values for the 'feature' column

pr['final'] = pr['final'].replace(['[db_fv, blablacar]','[db_fv, blablacar, db_fv]'],'[blablacar, db_fv]')
pr['final'] = pr['final'].replace(['[db_fv, flixbus]','[db_fv, flixbus, db_fv]','[db_fv, flixbus, db_fv, flixbus]','[db_fv, flixbus, db_fv, flixbus, db_fv]','[flixbus, db_fv, flixbus, db_fv]','[flixbus, db_fv, flixbus]'],'[flixbus, db_fv]')
pr['final'] = pr['final'].replace(['[flixbus, blablacar, db_fv]','[db_fv, blablacar, flixbus]','[db_fv, blablacar, flixbus, db_fv]','[blablacar, db_fv, flixbus]','[blablacar, flixbus, db_fv]','[db_fv, flixbus, blablacar, flixbus]','[flixbus, blablacar, db_fv, flixbus]','[flixbus, db_fv, blablacar]','[flixbus, blablacar, flixbus, db_fv]','[blablacar, db_fv, flixbus, db_fv]','[db_fv, blablacar, db_fv, flixbus]'],'[db_fv, flixbus, blablacar]')
pr['final'] = pr['final'].replace(['[flixbus, blablacar]','[flixbus, blablacar, flixbus]'],'[blablacar, flixbus]')
pr['final'] = pr['final'].replace(['[flixbus, flight, db_fv, flixbus]','[db_fv, flight, flixbus, db_fv]'],'[flixbus, flight, db_fv]')
pr['final'] = pr['final'].replace(['[flixbus, flight, flixbus]'],'[flixbus, flight]')

"""For instance, assume, that 'train,bus,train' == 'train, bus' or 'bus,train' == 'train,bus' to calculate the probability of delays, since we are interested in the mode, that the traveler uses during the trip and not in sequence of the same mode label with different names (different train companies)

This initial label compression will further help to create the values in general and reduce the labels from 33 to 10 for assigning the special probability
"""

pr['probability'] = 0 #create a new column to correct the datatypes in a column, from string to array

"""The function will be called by coincidence in arrays, initially the column was a string (with the data made by Professor Ehmke and Thomas)"""

#function to correct the values 
def parse_modelabel(modelabel):
  modelabel = modelabel.strip("[]")#remove the brackets
  modelabel = modelabel.replace(" ", "") #replace the redundant spaces
  modelabel = modelabel.split(',')#make array from the string by comma
  return modelabel

#fill out the values row by row
for row in range(0, len(pr)):
  pr['probability'][row] = parse_modelabel(pr['final'][row])

"""The range of assignment [0,1]:

References to estimate the probability in general:

FLIGHT mode in Germany: based on Air Traffic in Germany Mobility Report (DFS Deutsche Flugsicherung)-punctual transport-low probability "0.2"
increasing in punctuality in comparison with the previous year, dealy up to 1 min 19 seconds
plus in accordance to analyzis of "tens of thousands of direct connections between 7 German cities": Munich, Stuttgart, Dresden, Frankfurt am Main, Berlin, Cologne and Hamburg. The data were July to September 2019. Evaluated 25,266 intra-German flights (70 per cent of which were carried out by Lufthansa)-detected the lowest level

CAR mode in germany: assuming that the traveler uses a private car (low probability of delay increased by traffic jam estimations based on tomtom germany traffic index which encompasses the results for 26 cities) with the rankings and days estimations with low traffic levels per year and changes in congestion level versus the previous year (jams got reduced)-0.2+0.2(to cover the traffic problems)="0.4"

FLIXBUS mode in Germany:
references https://www.archyde.com/delay-rates-how-punctual-the-plane-bus-and-train-really-are/
in accordance to analyzis of "tens of thousands of direct connections between 7 German cities": Munich, Stuttgart, Dresden, Frankfurt am Main, Berlin, Cologne and Hamburg. The data were July to September 2019. Evaluated 42,219 Flixbus rides. Detected the highest level.Hence, the probability assigned is "0.7"

TRAIN mode in germany:
references https://www.archyde.com/delay-rates-how-punctual-the-plane-bus-and-train-really-are/
in accordance to analyzis of "tens of thousands of direct connections between 7 German cities": Munich, Stuttgart, Dresden, Frankfurt am Main, Berlin, Cologne and Hamburg. The data were July to September 2019. Evaluated 53,284 train connections. Detected the level that is lower than flixbus delays but higher than flight delay. 
Plus, accroding to statista results with the "Share of punctual trains of Deutsche Bahn in passenger transport from April 2019 to April 2021"-90+% of trains have up to 16min ratio of the delay
https://www.statista.com/statistics/935040/deutsche-bahn-train-punctuality-germany/
Thus, the probability assigned is "0.6"

BLABLACAR mode in Germany: consists of the blablacar option with the car and blablabus option with the bus as a transport and special driver, based on consideration of previous estimates wrt cars and flixbus modes, also via checking the reviews of the customers regarding the blablabus innovation = the chance of being delayed increases-rederences: https://de.blablabus.com/= and https://getbybus.com/en/blablabus/reviews. Taking into consideration the low chance of blablacar being delayed (no specific statistics on data with the delay since the drivers are private)- probability level is 0.5((blablacar-low level+blablabus-high chance)/2)









"""

#compute the probability values and populate the respective column 'delay_probability"
def probability_calculations(data):
  
  delay_probability_car = 0.4
  delay_probability_flixbus = 0.7
  delay_probability_train = 0.6
  #delay_probability_flight = 0.2 we do not have flight separately,reveal the estimated level used for multiplication of probabilities
  delay_probability_blablacar = 0.5

#usage of probability calculator, probability that A or B or both occur: P(A∪B) 

  delay_probability_comb1 = 0.8 #prob(blablacar) * prob(train)= pr0.5*0.6
  delay_probability_comb2 = 0.88 #prob(flixbus) * prob(train)= pr0.7*0.6
  delay_probability_comb3 = 0.928 #prob(train*flixbus) * prob(blablacar)= pr0.88*0.4
  delay_probability_comb4 = 0.85 #prob(blablacar) * prob(flixbus)= pr0.5*0.7
  delay_probability_comb5 = 0.904 #prob(flixbus*flight) * prob(train)= pr0.76*0.6
  delay_probability_comb6 = 0.76 #prob(flixbus)*prob(flight)=pr0.7*0.2

  data['delay_probability'] = 0.0 #new column
  for i in range(0, len(data)): #iterate

    if ["flixbus"] == data["probability"].values[i]:
      data["delay_probability"].values[i] = delay_probability_flixbus #check and assign the specific values per mode/combination
    elif ["db_fv"] == data["probability"].values[i]:
      data["delay_probability"].values[i] = delay_probability_train
    elif ["car"] == data["probability"].values[i]:
      data["delay_probability"].values[i] = delay_probability_car
    elif ["blablacar"] == data["probability"].values[i]:
      data["delay_probability"].values[i] = delay_probability_blablacar


    elif ["blablacar", "db_fv"] == data["probability"].values[i]:
      data["delay_probability"].values[i] = delay_probability_comb1
    elif ["flixbus", "db_fv"] == data["probability"].values[i]:
      data["delay_probability"].values[i] = delay_probability_comb2
    elif ["db_fv", "flixbus", "blablacar"] == data["probability"].values[i]:
      data["delay_probability"].values[i] = delay_probability_comb3
    elif ["blablacar", "flixbus"] == data["probability"].values[i]:
      data["delay_probability"].values[i] = delay_probability_comb4
    elif ["flixbus", "flight", "db_fv"] == data["probability"].values[i]:
      data["delay_probability"].values[i] = delay_probability_comb5
    elif ["flixbus", "flight"] == data["probability"].values[i]:
      data["delay_probability"].values[i] = delay_probability_comb6

probability_calculations(pr) #calculate

"""In order to calculate the prepared combinations of modes with different levels of probabilities, the probability calculator has been utilized from https://www.calculator.net/probability-calculator.html
Probability of 2 events the final result=> Probability that A or B or both occur: P(A∪B)
If we have 3 events in an array- at first probability of 2 events or both is calculated and then the value is multiplied by the probability of the third event (the respective mode)
"""

pr#investigate the dataframe

"""The column + the populated values"""

pr.loc[pr['delay_probability'] == 0.76] #examine the concrete values

"""specific labels (the minority) got filled in"""

pr.loc[pr['delay_probability'] == 0.904] #examine the concrete values

#explore the uniqness of the created column
uniqueValues1 = pr['delay_probability'].unique() #enumeration
uniqueValues2 = pr['delay_probability'].nunique() #count
print (uniqueValues1)
print (uniqueValues2)

"""10 probability values= 10 values of the mode"""

pr.drop(['Unnamed: 0', 'final', 'probability'], axis=1, inplace=True) #drop the redundant-transitional columns, used for computations only
pr

#download final Dataset for sharing with the team
from google.colab import files
pr.to_csv('final++.csv') 
files.download('final++.csv')